[tool.poetry]
name = "llm-report"
version = "0.1.0"
description = "Automated LLM news report generation tool that scrapes Reddit, processes content with AI, and generates PDF reports"
authors = ["Icarus603 <Icarus603@users.noreply.github.com>"]
readme = "README.md"
packages = [{include = "llm_report_tool"}]

[tool.poetry.dependencies]
python = ">=3.11"
# Core dependencies
requests = "^2.31.0"
beautifulsoup4 = "^4.12.0"
pandas = "^2.1.0"
python-dotenv = "^1.0.0"
numpy = "^1.24.0"
# Web scraping
selenium = "^4.33.0"
webdriver-manager = "^4.0.0"
# API and AI
openai = "^1.0.0"
# PDF generation
pylatex = "^1.4.0"
# Additional utilities
lxml = "^4.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
black = "^23.0.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
isort = "^5.12.0"
pre-commit = "^3.0.0"
pytest-cov = "^4.1.0"
openpyxl = "^3.1.5"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Code formatting with Black
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Import sorting with isort
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Linting with flake8
[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".venv"]

# Type checking with mypy
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["selenium.*", "webdriver_manager.*", "pylatex.*", "bs4.*"]
ignore_missing_imports = true

# Test configuration with pytest
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=llm_report_tool --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (may require external services)",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests"
]

# Coverage configuration
[tool.coverage.run]
source = ["llm_report_tool"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
